@page "/servers"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />
<h3>Server Component:</h3>
<ServerComponent @rendermode="InteractiveServer"></ServerComponent>
<br />
<br />`
<CityListComponent SelectCityCallback="HandleCitySelection"></CityListComponent>
<br />
<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search Servers" @bind-value="serverFilter"
        @bind-value:event="oninput" />
    <button class="btn btn-outline-secondary" type="button" id="button-search" @onclick="HandleSearch">Search</button>
</div>
<br />
<h4>Server Filter: @serverFilter</h4>
<br />
<h3>List of Servers in City:</h3>
<ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent>
@* <ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent> *@
<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>
@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Toronto");

    // Selected City - from City List component
    // passed onto the ServerList component as a param
    private string selectedCity = "Toronto";

    // search bar - to demo onchange event
    private string _serverFilter = "";
    private string serverFilter
    {
        get => _serverFilter;
        set
        {
            _serverFilter = value;
            // here is were we intercept the setter
            // this.servers = ServersRepository.SearchServers(serverFilter);
        }
    }
    private void HandleServerFilterChange(ChangeEventArgs args)
    {
        // args contain the value that changed
        // serverFilter = args.Value?.ToString() ?? string.Empty;

        Console.WriteLine("onChange event implementation of search bar");
    }

    private void HandleSearch()
    {
        //this.servers = ServersRepository.SearchServers(serverFilter);
        //this.selectedCity = string.Empty;
        // doesn't make sense to keep the card highlighted

    }

    // SelectCity Callback Handler
    private void HandleCitySelection(string cityName) // this arg matches the Callback<string> signature
    {
        selectedCity = cityName;
    }
}