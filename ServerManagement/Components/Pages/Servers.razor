@page "/servers"

@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />
<h3>Server Component:</h3>
<ServerComponent @rendermode="InteractiveServer"></ServerComponent>
<br />
<br />`
<CityListComponent SelectCityCallback="HandleCitySelection"></CityListComponent>
<br />
<SearchBarComponent ServerFilterCallback="HandleSearchFilter"></SearchBarComponent>
<br />
<h3>List of Servers in City:</h3>
<ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity" SearchFilter="@this.searchFilter">
</ServerListComponent>
@* <ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent> *@
<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>
@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Toronto");

    // Selected City - from City List component
    // passed onto the ServerList component as a param
    private string selectedCity = "Toronto";

    // SelectCity Callback Handler
    private void HandleCitySelection(string cityName) // this arg matches the Callback<string> signature
    {
        selectedCity = cityName;
        this.searchFilter = string.Empty; // when selecting city after search bar is used, list will render properly
    }

    // Search Handler
    private string searchFilter = "";
    private void HandleSearchFilter(string serverFilter)
    {
        // this.servers = ServersRepository.SearchServers(serverFilter);
        // this.selectedCity = string.Empty;

        // the server list is in a different component => thus we need to pass this filter value to server list component
        // 1- add a component param in Server List component
        // 2 - pass in the filter from this component here
        this.searchFilter = serverFilter;

    }
}