@page "/servers/{id:int}"

<h1>Edit Server</h1>
<br />
<div>
    Use Param Example:
</div>
@Id

<div>
    OnParameterSet() event, retrieve server info using server Id:
</div>
@if (server != null)
{
    <p>@server.Name</p>
    <p>@server.City</p>
    <p>@server.IsOnline</p>
}
<br />

<div>
    Form Example:
</div>
@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <InputNumber @bind-Value="server.ServerId" hidden></InputNumber>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Name</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="server.Name" class="form-control"></InputText>
        </div>
        <div class="col">
            <ValidationMessage For="()=>server.Name"></ValidationMessage>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">City</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="server.City" class="form-control"></InputText>
        </div>
        <div class="col">
            <ValidationMessage For="()=>server.City"></ValidationMessage>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Online</label>
        </div>
        <div class="col-6">
            <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Update</button>
    &nbsp;
    <a href="/servers" class="btn btn-primary">Close</a>
</EditForm>
}


@code
{
    // use :int syntax above to add route constraint

    [Parameter]
    public int Id { get; set; }
    // for route pamater, there is case insensitive match

    // private Server? server;
    [SupplyParameterFromForm(FormName = "formServer")]
    private Server? server { get; set; }

    // to use the Id parameter to obtain server info
    // when parameter value is received ->lifecycle event is triggered: OnParametersSet(),OnParametersSetAsync()
    protected override void OnParametersSet()
    {
        // base.OnParametersSet();
        // not necessary to call this base class method

        // In this event, Id variable is guaranteed to be loaded
        // we retrieve the server obj => pass value into server variable
        server ??= ServersRepository.GetServerById(this.Id);
        // ??= means that we only call this if server is null
    }

    // Form submission function
    private void Submit()
    {
        if (server is not null)
        {
            ServersRepository.UpdateServer(server.ServerId, server);
        }
    }
}